version: "3.7"
services:

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.prod
    volumes:
      - static_volume:/backend/staticfiles
      - media:/backend/media
    environment:
      ADMIN_USERNAME: "${ADMIN_USERNAME}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq"
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
      ALLOW_SIGNUP: "False"
      DEBUG: "False"
    depends_on:
      - postgres
    networks:
      - doccano

  celery:
    build:
      context: .
      dockerfile: backend/Dockerfile.prod
    volumes:
      - media:/backend/media
    entrypoint: ["/opt/bin/prod-celery.sh"]
    environment:
      PYTHONUNBUFFERED: "1"
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq"
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - doccano

  rabbitmq:
    image: rabbitmq:3.8
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    ports:
      - 5672:5672
    networks:
      - doccano


  traefik:
    image: "traefik:v2.0"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - '--entrypoints.web.address=:80'
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - '--certificatesresolvers.le.acme.httpchallenge.entrypoint=web'
      # - "--certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.le.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--accesslog=true"
    ports:
      - "443:443"
      - "80:80"
      - "127.0.0.1:8085:8080"
    volumes:
      - traefik-certificates:/letsencrypt
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - doccano

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    environment:
      API_URL: "http://backend:8000"
      GOOGLE_TRACKING_ID: ""
    volumes:
      - static_volume:/static
      - media:/media
    ports:
      - 127.0.0.1:8839:8080
    depends_on:
      - backend
    networks:
      - doccano
    labels:
      - "traefik.http.routers.doccano.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.enable=true"
      - "traefik.http.services.nginx-doccano.loadbalancer.server.port=8080"
      - "traefik.http.routers.doccano.tls=true"
      - "traefik.http.routers.doccano.tls.certresolver=le"
      - "traefik.http.routers.doccano.tls.domains[0].sans=${DOMAIN_NAME}"
      - "traefik.http.routers.redirs.entrypoints=web"  
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"  
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"  
      


  postgres:
    image: postgres:13.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports: 
      - 127.0.0.1:5432:5432
    networks:
      - doccano

volumes:
  postgres_data:
  static_volume:
  media:
  traefik-certificates:

networks:
  doccano:

